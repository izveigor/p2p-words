# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: lemmatizer.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x10lemmatizer.proto\x12\x03p2p\"!\n\x11LemmatizerRequest\x12\x0c\n\x04text\x18\x01 \x01(\t\"<\n\x0eLemmatizedWord\x12\x10\n\x08sentence\x18\x01 \x01(\t\x12\x0c\n\x04word\x18\x02 \x01(\t\x12\n\n\x02id\x18\x03 \x01(\x05\"8\n\x12LemmatizerResponse\x12\"\n\x05words\x18\x01 \x03(\x0b\x32\x13.p2p.LemmatizedWord2K\n\x0bLemmatizers\x12<\n\tLemmatize\x12\x16.p2p.LemmatizerRequest\x1a\x17.p2p.LemmatizerResponseb\x06proto3')



_LEMMATIZERREQUEST = DESCRIPTOR.message_types_by_name['LemmatizerRequest']
_LEMMATIZEDWORD = DESCRIPTOR.message_types_by_name['LemmatizedWord']
_LEMMATIZERRESPONSE = DESCRIPTOR.message_types_by_name['LemmatizerResponse']
LemmatizerRequest = _reflection.GeneratedProtocolMessageType('LemmatizerRequest', (_message.Message,), {
  'DESCRIPTOR' : _LEMMATIZERREQUEST,
  '__module__' : 'lemmatizer_pb2'
  # @@protoc_insertion_point(class_scope:p2p.LemmatizerRequest)
  })
_sym_db.RegisterMessage(LemmatizerRequest)

LemmatizedWord = _reflection.GeneratedProtocolMessageType('LemmatizedWord', (_message.Message,), {
  'DESCRIPTOR' : _LEMMATIZEDWORD,
  '__module__' : 'lemmatizer_pb2'
  # @@protoc_insertion_point(class_scope:p2p.LemmatizedWord)
  })
_sym_db.RegisterMessage(LemmatizedWord)

LemmatizerResponse = _reflection.GeneratedProtocolMessageType('LemmatizerResponse', (_message.Message,), {
  'DESCRIPTOR' : _LEMMATIZERRESPONSE,
  '__module__' : 'lemmatizer_pb2'
  # @@protoc_insertion_point(class_scope:p2p.LemmatizerResponse)
  })
_sym_db.RegisterMessage(LemmatizerResponse)

_LEMMATIZERS = DESCRIPTOR.services_by_name['Lemmatizers']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _LEMMATIZERREQUEST._serialized_start=25
  _LEMMATIZERREQUEST._serialized_end=58
  _LEMMATIZEDWORD._serialized_start=60
  _LEMMATIZEDWORD._serialized_end=120
  _LEMMATIZERRESPONSE._serialized_start=122
  _LEMMATIZERRESPONSE._serialized_end=178
  _LEMMATIZERS._serialized_start=180
  _LEMMATIZERS._serialized_end=255
# @@protoc_insertion_point(module_scope)
